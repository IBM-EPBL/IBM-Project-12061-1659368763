//TINKERCAD LINK: https://www.tinkercad.com/things/evLAJwA6gSK-ibm-assignment-1-home-automation
int tilt = 2;         // the number of the input pin
int led = 13;         // the number of the output pin
int sensorState = 0;
#include <IRremote.h>
int RECV_PIN = 10;
IRrecv irrecv(RECV_PIN);
decode_results results;
//int led = 13;
int LightPin = 2;
int Photo_Pin = A0;
int readPhoto;
void setup()
{
  pinMode(tilt, INPUT);
  pinMode(led, OUTPUT);
  pinMode(4, INPUT);
  pinMode(13, OUTPUT);
  Serial.begin(9600);
   Serial.begin(9600);
  // In case the interrupt driver crashes on setup, give a clue
  // to the user what's going on.
  Serial.println("Enabling IRin");
  irrecv.enableIRIn(); // Start the receiver
  Serial.println("Enabled IRin");
  pinMode(13,OUTPUT);
  pinMode(led, OUTPUT);
  pinMode(LightPin, OUTPUT);
  pinMode(Photo_Pin, INPUT);
}
void loop()
{
  int reading;
  reading = digitalRead(tilt);
  if(reading)
    digitalWrite(led, LOW);
  else
    digitalWrite(led, HIGH);
  // read the state of the sensor/digital input
  sensorState = digitalRead(4);
  // check if sensor pin is HIGH. if it is, set the
  // LED on.
  if (sensorState == HIGH) {
    digitalWrite(13, HIGH);
    Serial.println("Sensor activated!");
  } else {
    digitalWrite(13, LOW);
  }
  delay(100); // Delay a little bit to improve simulation performance
  if (irrecv.decode(&results)) {
    Serial.println(results.value, DEC);
    if (results.value == 16580863){
     digitalWrite(13,HIGH); 
    }
    irrecv.resume(); // Receive thxt value
  }
  delay(100);
  digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)
  readPhoto = analogRead(Photo_Pin);
  if (readPhoto < 518) {
  digitalWrite(LightPin, HIGH);
  }else{
      digitalWrite(LightPin, LOW);
  }
  delay(1000);               // wait for a second
  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW
  //delay(1000);               
  
}
